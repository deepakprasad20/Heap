/**
 * Program to find k closest value of given value X.
 * */
import java.util.Collections;
import java.util.PriorityQueue;

public class HeapDemo {
    public static void main(String[] args){
        int[] arr = {5,6,7,8,9};
        int k = 3;
        int x = 7;
        findKLargestElement(arr,k,x);
    }

    private static void findKLargestElement(int[] arr, int k,int x) {
        PriorityQueue<Entry> maxheap = new PriorityQueue<>(Collections.reverseOrder());
        for(int i = 0 ; i < arr.length ; i++){
            maxheap.add(new Entry(Math.abs(arr[i]-x),arr[i]));
            if(maxheap.size() > k){
                maxheap.poll();
            }
        }
        System.out.println("the values closest to " + x +" from given array is : ");
        while(maxheap.size() > 0){
            System.out.print(maxheap.peek().value + " ");
            maxheap.poll();
        }
    }
}
class Entry implements Comparable<Entry>{
    int key;
    int value;

    public Entry(int key,int value){
        this.key = key;
        this.value = value;
    }

    public int getKey() {
        return key;
    }

    public void setKey(int key) {
        this.key = key;
    }

    public int getValue() {
        return value;
    }

    public void setValue(int value) {
        this.value = value;
    }

    @Override
    public int compareTo(Entry other) {
        return this.getKey() - other.getKey();
    }
}
